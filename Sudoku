from tkinter import *
from tkinter import font
from functools import partial
from random import *
matriz = [[" " for i in range(9)]for j in range(9)]
tmatriz = [[" " for i in range(9)]for j in range(9)]
matrizbotoes = [[0 for i in range(9)]for j in range(9)]


def removerPorIndice(i, lista):
    novaLista = []
    for n in range(0, i):
        novaLista += [lista[n]]

    for n in range(i, len(lista) - 1):
        novaLista += [lista[n + 1]]

    return novaLista


def verificarLinha(linha, numeros):
    num = numeros[:]
    for n in linha:
        cont = 0
        for j in num:
            if (n == j):
                num = removerPorIndice(cont, num)
            cont += 1
    if (num == []):
        return True

    return False


def verificarSudoku(matriz):
    numeros = [1, 2, 3, 4, 5, 6, 7, 8, 9]
    for n in range(0, 9):
        if (verificarLinha(matriz[n], numeros) == False):
            return "NAO"

    for coluna in range(0, 9):
        col = []
        for linha in range(0, 9):
            col += [matriz[linha][coluna]]
        if (verificarLinha(col, numeros) == False):
            return "NAO"

    for i in range(0, 9, 3):
        for j in range(0, 9, 3):
            matrizLinha = []
            for auxLin in range(0, 3):
                for auxCol in range(0, 3):
                    matrizLinha += [matriz[i + auxLin][j + auxCol]]
            if (verificarLinha(matrizLinha, numeros) == False):
                return "NAO"

    return "SIM"


def preencher(Matriz,n):
    for i in range(n):
        L = randint(0,8)
        C = randint(0,8)
        X = randint(1,9)
        while True:
            if X not in Matriz[L] and X not in tmatriz[C]:
                Matriz[L][C] = X
                tmatriz[C][L] = X
                break
            else:
                X = randint(1,9)

def bt_clickf():
    janela.destroy()
    preencher(matriz, n=65)
    global janela2
    janela2 = Tk()
    janela2.geometry("594x639+370+10")
    menu = Menu(janela2)
    file = Menu(menu)
    menu.add_cascade(label="Reiniciar", menu=file)
    janela2.config(menu=menu)
    file.add_command(label="Reset", command=inicio)
    print(matriz)
    for x in matriz:
        print(*x)
    crateGrid()


def bt_clickm():
    janela.destroy()
    preencher(matriz, n=17)
    global janela2
    janela2 = Tk()
    janela2.geometry("594x639+370+10")
    for x in matriz:
        print(*x)
    crateGrid()

    janela2.mainloop()
def bt_clickd():
    janela.destroy()
    preencher(matriz, n=10)
    global janela2
    janela2 = Tk()
    janela2.geometry("594x639+370+10")
    for x in matriz:
        print(*x)
    crateGrid()
    janela2.mainloop()

def verificaganhou():
    janela4 = Tk()
    if verificarSudoku(matriz) == "NAO":
        lb = Label(janela4, text="SUDOKU COMPLETADO INCORRETAMENTE!!")
        lb.pack()
    janela4.geometry("460x300+430+75")
    janela4.mainloop()
def printnum(op2, row, col):
    list = [1, 2, 3, 4, 5, 6, 7, 8 , 9]
    janela3.destroy()
    matrizbotoes[row][col]["text"] = op2
    matriz[row][col] = op2
    print(matriz)
    aux = 0
    for c in range(9):
        for j in range(9):
            if matriz[c][j] in list:
                aux+=1
            if aux==81:
                verificaganhou()
    print(aux)


def colocanumeros(row, col):
    global janela3
    janela3 = Tk()
    janela3.geometry("+110+55")
    b1 = Button(janela3, width=8, height=4, text=1, command=lambda: printnum(1, row, col))
    b1.grid(row=1, column=1, sticky=N + S + E + W)
    b2 = Button(janela3, width=8, height=4, text=2, command=lambda: printnum(2, row, col))
    b2.grid(row=1, column=2, sticky=N + S + E + W)
    b3 = Button(janela3, width=8, height=4, text=3, command=lambda: printnum(3, row, col))
    b3.grid(row=1, column=3, sticky=N + S + E + W)
    b4 = Button(janela3, width=8, height=4, text=4, command=lambda: printnum(4, row, col))
    b4.grid(row=2, column=1, sticky=N + S + E + W)
    b5 = Button(janela3, width=8, height=4, text=5, command=lambda: printnum(5, row, col))
    b5.grid(row=2, column=2, sticky=N + S + E + W)
    b6 = Button(janela3, width=8, height=4, text=6, command=lambda: printnum(6, row, col))
    b6.grid(row=2, column=3, sticky=N + S + E + W)
    b7 = Button(janela3, width=8, height=4, text=7, command=lambda: printnum(7, row, col))
    b7.grid(row=3, column=1, sticky=N + S + E + W)
    b8 = Button(janela3, width=8, height=4, text=8, command=lambda: printnum(8, row, col))
    b8.grid(row=3, column=2, sticky=N + S + E + W)
    b9 = Button(janela3, width=8, height=4, text=9, command=lambda: printnum(9, row, col))
    b9.grid(row=3, column=3, sticky=N + S + E + W)

    janela3.mainloop()
def crateGrid():
    for rowindex in range (9):
        for colindex in range (9):
            if (rowindex in (0,1,2,6,7,8) and colindex in (3,4,5) or \
                (rowindex in (3,4,5) and colindex in (0,1,2,6,7,8))):
                    colour="light gray"
            else:
                colour="white"
            x=matriz[rowindex][colindex]
            if x==" ":
                matrizbotoes[rowindex][colindex]= Button(janela2, width=8, height=4, bg=colour, text=x, cursor="mouse")
                matrizbotoes[rowindex][colindex].config(command= lambda rowindex=rowindex, colindex=colindex: colocanumeros(rowindex, colindex))
                matrizbotoes[rowindex][colindex].grid(row=rowindex, column=colindex, sticky=N + S + E + W)

            else:
                colourTxt="black"
                btn1 = Button(janela2, width=8, height=4, bg=colour, text=x, fg=colourTxt, cursor="cross")
                btn1.grid(row=rowindex, column=colindex, sticky=N + S + E + W)
                matrizbotoes[rowindex][colindex] = btn1


def inicio():
    global janela
    janela = Tk()
    janela.title("SUDOKU")
    janela["bg"] = "light gray"
    # janela["bg"] = "black" (Trocar de cor)
    lb = Label(janela, text="ESCOLHA A DIFICULDADE")
    lb["bg"] = "light gray"
    lb.pack()
    bt_facil = Button(janela, width=17, height=6, text="Fácil", command=bt_clickf)

    bt_facil.place(x=20, y=140)
    bt_medio = Button(janela, width=17, height=6, text="Médio", command=bt_clickm)
    bt_medio.place(x=165, y=140)
    bt_dificil = Button(janela, width=17, height=6, text="Difícil", command=bt_clickd)
    bt_dificil.place(x=310, y = 140)


    janela.geometry("460x300+430+75") #LarguraxAltura+Esquerda+Topo

    janela.mainloop( )
inicio()
